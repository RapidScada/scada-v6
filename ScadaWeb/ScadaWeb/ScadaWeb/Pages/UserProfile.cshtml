@page "{id:int?}"
@model UserProfileModel
@{
    Layout = "_MainLayout";
    dynamic dict = Locale.GetDictionary("Scada.Web.Pages.UserProfile");
    ViewBag.Title = dict.PageTitle;
}

@section Styles {
    <link href="~/css/pages/user-profile.min.css" rel="stylesheet" asp-append-version="true" />
}

<h1>@dict.PageTitle</h1>

<div id="divUserInfo">
    <div class="row">
        <label id="lblUserID" for="txtUserID" class="col-sm-3 col-form-label">@dict.lblUserID</label>
        <div class="col-sm-9">
            <input id="txtUserID" type="text" class="form-control-plaintext" readonly value="@Model.UserID">
        </div>
    </div>
    <div class="row">
        <label id="lblUsername" for="txtUsername" class="col-sm-3 col-form-label">@dict.lblUsername</label>
        <div class="col-sm-9">
            <input id="txtUsername" type="text" class="form-control-plaintext" readonly value="@Model.Username">
        </div>
    </div>
    <div class="row">
        <label id="lblRole" for="txtRole" class="col-sm-3 col-form-label">@dict.lblRole</label>
        <div class="col-sm-9">
            <input id="txtRole" type="text" class="form-control-plaintext" readonly value="@Model.RoleName">
        </div>
    </div>
    <div class="row" id="timezoneShow">
        <label id="lblTimeZone" for="txtRole" class="col-sm-3 col-form-label">@dict.lblTimeZone</label>
        <div class="col-sm-9">
            <div class="row">
                <div class="col-sm-9">
                    <input id="txtTimeZone" type="text" class="form-control-plaintext" readonly value="@Model.TimeZone">
                </div>
                <div class="col-sm-3">
                    <button type="button" id="timezoneUpdateBtn" class="btn btn-primary">@dict.btnUpdateTimezone</button>
                </div>
            </div>
        </div>
    </div>
    <div class="row" id="timezoneModify" style="display:none;">
        <label id="lblTimeZone" for="txtRole" class="col-sm-3 col-form-label">@dict.lblTimeZone</label>
        <div class="col-sm-9">
            <div class="row">
                <div class="col-sm-9">
                    <select class="form-select" aria-label="select role" id="timezonSelect"></select>
                </div>
                <div class="col-sm-3">
                    <button type="button" id="timezoneConfirmBtn" class="btn btn-primary">@dict.btnConfirmTimezone</button>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-3">
            <button type="button" class="btn btn-primary" id="btnModifyPassword">@dict.btnPwdModify</button>
        </div>
    </div>
    @if (Model.IsFirstLogin)
    {
        <h2 style="color:red;">First time login should modify password</h2>
    }
    <div class="mt-3 border-top" id="pwdDiv" style="display:none;">
        <div class="row mt-3">
            <label id="lblOldPwd" for="txtRole" class="col-sm-3 col-form-label">@dict.lblOldPwd</label>
            <div class="col-sm-9">
                <input id="txtOldPwd" type="password" class="form-control" autocomplete="off" value="@Model.OldPwd">
            </div>
        </div>
        <div class="row mt-3">
            <label id="lblNewPwd" for="txtRole" class="col-sm-3 col-form-label">@dict.lblNewPwd</label>
            <div class="col-sm-9">
                <div class="input-group">
                    <input id="txtNewPwd" type="password" class="form-control" autocomplete="off" value="@Model.NewPwd">
                    <span class="input-group-text" id="basic-addon2" data-bs-toggle="tooltip" data-bs-placement="right" title="@Model.PwdComplicatedFormatTips">
                        <i class="fas fa-question-circle"></i>
                    </span>
                </div>
            </div>
        </div>
        <div class="row mt-3">
            <label id="lblNewRePwd" for="txtRole" class="col-sm-3 col-form-label">@dict.lblNewRePwd</label>
            <div class="col-sm-9">
                <div class="input-group">
                    <input type="password" id="txtNewRePwd" class="form-control" autocomplete="off" value="@Model.NewRePwd">
                    <span class="input-group-text" id="basic-addon2" data-bs-toggle="tooltip" data-bs-placement="right" title="@Model.PwdComplicatedFormatTips">
                        <i class="fas fa-question-circle"></i>
                    </span>
                </div>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-sm-9">
                <button type="button" class="btn btn-primary" id="btnConfirm">@dict.btnPwdConfirm</button>
                <button type="button" class="btn btn-secondary" id="btnCancel">@dict.btnPwdCancel</button>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script src="~/lib/jquery.md5.min.js"></script>
    <script>
        var timeZoneMapper = JSON.parse('@Model.TimeZoneMapper'.replaceAll('&quot;', '"'));
        $(function () {
            $('#btnModifyPassword').click(function () {
                $(this).hide();
                $('#txtOldPwd').val('');
                $('#txtNewPwd').val('');
                $('#txtNewRePwd').val('');
                $('#pwdDiv').show();
            });
            var pwdLenLimit = @Model.PwdLenLimit;
            var pwdComplicatedFormat = '@Model.PwdComplicatedFormat';

            var regNum = new RegExp(/^.*[0-9]+.*$/);
            var regLetter = new RegExp(/(?=.*[a-z])(?=.*[A-Z])/);
            var regSymbol = new RegExp(/[\s~`!@@#$%^&*()\-_=+[\]{}|;:'",<.>/?]/);
            function layeralert(msg,callback) {
                layer.alert(msg, { title: 'tips', btn: ['@dict.btnLayerConfirm'] }, callback);
            }
            function initTimeZoneOptions(){
                $("#timezonSelect").append('<option value=""></option>');
                for (let timezone in timeZoneMapper) {
                    let timezoneOpt = $("<option value='" + timezone + "'>" + timeZoneMapper[timezone] + "</option>")
                    if ('@Model.TimeZoneId' == timezone) timezoneOpt.attr("selected", "selected");
                    $("#timezonSelect").append(timezoneOpt);
                }
            }
            $('#btnConfirm').click(function () {
                var oldPwd = $('#txtOldPwd').val();
                var newPwd = $('#txtNewPwd').val();
                var newRePwd = $('#txtNewRePwd').val();
                if (newPwd != newRePwd) return layeralert('@dict.tipsReenterdPwdNotMatch');
                if (newPwd.length < pwdLenLimit) return layeralert('@dict.tipsPwdLenRule'.replace('{0}', pwdLenLimit))
                if (pwdComplicatedFormat) {
                    if (pwdComplicatedFormat.indexOf('num') > -1 && !regNum.test(newPwd)) return layeralert('@dict.tipsPwdContNum');
                    if (pwdComplicatedFormat.indexOf('letter') > -1 && !regLetter.test(newPwd)) return layeralert('@dict.tipsPwdContLetter');
                    if (pwdComplicatedFormat.indexOf('symbol') > -1 && !regSymbol.test(newPwd)) return layeralert('@dict.tipsPwdContSymbol');
                }
                oldPwd = $.md5(oldPwd);
                newPwd = $.md5(newPwd);
                $.ajax({
                    url: '@Url.Content("/account/modifypassword")',
                    type: 'POST',
                    contentType: "application/json",
                    dataType: 'json',
                    data: JSON.stringify({ oldPwd: oldPwd, newPwd: newPwd }),
                    success: function (data) {
                        if (data.ok) {
                            $('#btnModifyPassword').show();
                            $('#pwdDiv').hide();
                            layeralert('@dict.MsgPwdModified',function(){
                                setTimeout(function () {
                                    window.location.href = '@Url.Content("~/logout")';
                                }, 200);
                            });
                            
                        }
                        else {
                            layeralert(data.msg);
                        }
                    },
                    error: function (xhr, status, error) {
                        layeralert('unknow error');
                    }
                });
            });
            $("#timezoneUpdateBtn").click(function () {
                $("#timezoneShow").hide();
                $("#timezoneModify").show();
            })
            $("#timezoneConfirmBtn").click(function () {
                var timeZone = $("#timezonSelect").val();
                $.ajax({
                    url: '@Url.Content("/account/updatetimezone")',
                    type: 'POST',
                    contentType: "application/json",
                    dataType: 'json',
                    data: JSON.stringify({ timeZone: timeZone }),
                    success: function (data) {
                        if (data.ok) {
                            layeralert('@dict.TimeZoneModified',function(){
                                window.location.reload();
                            });
                        }
                        else {
                            layeralert(data.msg);
                        }
                    },
                    error: function (xhr, status, error) {
                        layeralert('unknow error');
                    }
                });
            })
            $('#btnCancel').click(function () {
                $('#btnModifyPassword').show();
                $('#pwdDiv').hide();
            });
            initTimeZoneOptions();
        })
    </script>
}