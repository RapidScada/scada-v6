@page "/en/latest/modules/mod-auto-control"
@{
    Layout = "_ArticleLayout";
    ViewBag.Title = "Automatic Control Module";
}

<nav class="doc-toc">
    <div class="h6">On this page</div>
    <hr>
    <ul>
        <li><a href="#overview">Overview</a></li>
        <li><a href="#installation">Installation</a></li>
        <li>
            <a href="#configuring">Configuring</a>
            <ul>
                <li><a href="#triggers">Triggers</a></li>
                <li><a href="#commands">Commands</a></li>
                <li><a href="#events">Events</a></li>
                <li><a href="#variables">Variables</a></li>
            </ul>
        </li>
    </ul>
</nav>

<div class="doc-content">
    <h1>Automatic Control Module</h1>
    <h2 id="overview">Overview</h2>
    <p>Automatic Control Module is an additional module for the Server application that sends commands and generates events when certain conditions are met. The module helps to implement various control algorithms and sending notifications without the need for programming, through the user interface. Download the module using the <a href="https://rapidscada.net/store/Module/en/ModAutoControl" target="_blank">link</a>. The following figure shows the form for configuring the module.</p>
    <figure class="figure">
        <img src="mod-auto-control-files/auto-control-en.png" class="figure-img img-fluid" alt="Automatic Control Module" />
    </figure>
    <p>Information about fired triggers, sent commands and events is recorded in the <code>ModAutoControl.log</code> module log file, which can be viewed using the Administrator application or any text editor.</p>

    <h2 id="installation">Installation</h2>
    <p>Automatic Control Module is installed according to the <a href="../installation/install-modules#modules">instructions</a>. The module installation sequence is typical.</p>

    <h2 id="configuring">Configuring</h2>
    <p>Setting up the module involves creating triggers that fire when certain conditions are met. Triggers can be of different types, discussed below. When a trigger fires, the module sends commands and generates events that relate to that trigger.</p>
    <p>To open the module configuration form, go to the <strong>Server &gt; Modules</strong> page, select the <strong>ModAutoControl</strong> module and click the <strong>Properties</strong> button. The module should be in the list of active modules. The module configuration is saved in the <code>ModAutoControl.xml</code> file.</p>

    <h3 id="triggers">Triggers</h3>
    <h4>Channel Data Trigger</h4>
    <p>A channel data trigger is fired when the channel value and status match the conditions specified in the trigger parameters. When started, the module populates a list of channels that satisfy the channel filter. The value and status of the channel, which are specified by the trigger parameters, are checked individually for each channel from that list. If the channel filter is empty, the trigger works for all active channels of the input type.</p>
    <p>The trigger has a state that provides the ability to delay and repeat the trigger firing. The trigger state is saved during the module's operation and is loaded when Server starts.</p>
    <figure class="figure">
        <img src="mod-auto-control-files/cnl-data-trigger-en.png" class="figure-img img-fluid" alt="Channel data trigger" />
    </figure>

    <h4>Multi-Channel Data Trigger</h4>
    <p>This type of trigger is used if the condition must take into account the values ​​of more than one channel. If the status of any of the specified channels is not defined, then the condition for that channel is considered not to be met. The trigger state is saved and loaded by the module.</p>
    <figure class="figure">
        <img src="mod-auto-control-files/multi-cnl-data-trigger-en.png" class="figure-img img-fluid" alt="Multi-channel data trigger" />
    </figure>

    <h4>Channel Data Change Trigger</h4>
    <p>A trigger fires when the value or status of the specified channel changes. The corresponding parameter is intended to limit the trigger frequency.</p>
    <figure class="figure">
        <img src="mod-auto-control-files/cnl-data-change-trigger-en.png" class="figure-img img-fluid" alt="Channel data change trigger" />
    </figure>

    <h4>Event Trigger</h4>
    <p>An event trigger fires if an event that occurs in the system meets the specified conditions. The trigger also responds to events generated by the module itself. When a trigger fires, new events cannot be generated to avoid an infinite loop.</p>
    <figure class="figure">
        <img src="mod-auto-control-files/event-trigger-en.png" class="figure-img img-fluid" alt="Event trigger" />
    </figure>

    <h4>Time Trigger</h4>
    <p>A time trigger can fire every day at specified times, on specific days of the week, days of the month, or on a specific date.</p>
    <figure class="figure">
        <img src="mod-auto-control-files/time-trigger-en.png" class="figure-img img-fluid" alt="Time trigger" />
    </figure>

    <h4>Command Trigger</h4>
    <p>A trigger on a command is convenient to use in cases where a series of commands need to be sent based on one command. If a trigger has a data validation condition, the incoming command data is converted to a string using UTF8 encoding and then checked against the condition.</p>
    <p>The trigger also responds to commands sent by the module itself. The maximum recursion depth is limited to 10 levels.</p>
    <figure class="figure">
        <img src="mod-auto-control-files/command-trigger-en.png" class="figure-img img-fluid" alt="Command trigger" />
    </figure>

    <h3 id="commands">Commands</h3>
    <p>The figure below shows the parameters of the command that is sent when the trigger fires or normalizes. A command can be sent to a channel or directly to a device. If a command is sent to a channel, the command will be checked for permissions and the output formula will be calculated. If a command is sent to a device, it will be added to the queue for sending to clients as is, without any additional processing. When sending a command to a device, specify the command number or code.</p>
    <figure class="figure">
        <img src="mod-auto-control-files/command-config-en.png" class="figure-img img-fluid" alt="Command configuration" />
    </figure>
    <p>If the <strong>Copy value</strong> checkbox is checked, the value of the command being sent will be copied from the value of the channel or command that fired the trigger, if applicable for the given trigger type. The string data specified in the command parameters may contain variables, which are described below.</p>

    <h3 id="events">Events</h3>
    <p>The following figure shows the parameters of the event that is generated when the trigger fires or normalizes.</p>
    <figure class="figure">
        <img src="mod-auto-control-files/event-config-en.png" class="figure-img img-fluid" alt="Event configuration" />
    </figure>
    <p>If the event severity is set to default (0) in the module configuration, it is assigned by Server based on the channel status. If the severity is non-zero, the event is created with the specified severity.</p>
    <p>If the <strong>Acknowledgment required</strong> checkbox is not set, but the <strong>Ack Required</strong> field is set in the configuration database for the channel status, then the event acknowledgement flag is assigned by Server based on the status.</p>
    <p>The <strong>Custom text</strong> of the generated event is static without variable support.</p>

    <h3 id="variables">Variables</h3>
    <p>The string data of commands that are sent when triggers fire can contain variables. Variables are written in curly braces.</p>
    <p>The following variables are supported:</p>

    <table class="table table-hover">
        <thead>
            <tr>
                <th>Variable</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td colspan="2"><strong>For triggers of all types</strong></td>
            </tr>
            <tr>
                <td>{n}</td>
                <td>Current value of channel n, formatted, with dimensions. If n = 0, the trigger channel is used (if applicable)</td>
            </tr>
            <tr>
                <td>{Now}</td>
                <td>Current date and time in the server time zone</td>
            </tr>
            <tr>
                <td>{NowUtc}</td>
                <td>Current UTC date and time</td>
            </tr>
            <tr>
                <td>{Time}</td>
                <td>Trigger fire time in the server time zone</td>
            </tr>
            <tr>
                <td>{TimeUtc}</td>
                <td>Trigger fire time, UTC</td>
            </tr>
            <tr>
                <td colspan="2"><strong>For triggers on channel data</strong></td>
            </tr>
            <tr>
                <td>{CnlNum}</td>
                <td>Channel number</td>
            </tr>
            <tr>
                <td>{CnlName}</td>
                <td>Channel name</td>
            </tr>
            <tr>
                <td>{ObjNum}</td>
                <td>Object number</td>
            </tr>
            <tr>
                <td>{ObjName}</td>
                <td>Object name</td>
            </tr>
            <tr>
                <td>{DevNum}</td>
                <td>Device number</td>
            </tr>
            <tr>
                <td>{DevName}</td>
                <td>Device name</td>
            </tr>
            <tr>
                <td>{LoLo}</td>
                <td>Low low channel limit</td>
            </tr>
            <tr>
                <td>{Low}</td>
                <td>Lower channel limit</td>
            </tr>
            <tr>
                <td>{High}</td>
                <td>Upper channel limit</td>
            </tr>
            <tr>
                <td>{HiHi}</td>
                <td>High high channel limit</td>
            </tr>
            <tr>
                <td>{CnlVal}</td>
                <td>Channel value that caused the trigger to fire</td>
            </tr>
            <tr>
                <td>{CnlStat}</td>
                <td>Channel status that caused the trigger to fire</td>
            </tr>
            <tr>
                <td colspan="2"><strong>For event triggers</strong></td>
            </tr>
            <tr>
                <td>{EvID}</td>
                <td>Event ID</td>
            </tr>
            <tr>
                <td>{EvTime}</td>
                <td>Event time in the server time zone</td>
            </tr>
            <tr>
                <td>{EvObjNum}</td>
                <td>Object number of the event</td>
            </tr>
            <tr>
                <td>{EvObj}</td>
                <td>Object name of the event</td>
            </tr>
            <tr>
                <td>{EvDevNum}</td>
                <td>Device number of the event</td>
            </tr>
            <tr>
                <td>{EvDev}</td>
                <td>Device name of the event</td>
            </tr>
            <tr>
                <td>{EvCnlNum}</td>
                <td>Channel number of the event</td>
            </tr>
            <tr>
                <td>{EvCnl}</td>
                <td>Channel name of the event</td>
            </tr>
            <tr>
                <td>{EvText}</td>
                <td>Display text of the event</td>
            </tr>
            <tr>
                <td>{EvSev}</td>
                <td>Displayed event severity</td>
            </tr>
            <tr>
                <td colspan="2"><strong>For command triggers</strong></td>
            </tr>
            <tr>
                <td>{CmdVal}</td>
                <td>Command value that caused the trigger to fire</td>
            </tr>
            <tr>
                <td>{CmdDataStr}</td>
                <td>Command data as a string</td>
            </tr>
            <tr>
                <td>{CmdDataHex}</td>
                <td>Command data in hexadecimal</td>
            </tr>
        </tbody>
    </table>
</div>
